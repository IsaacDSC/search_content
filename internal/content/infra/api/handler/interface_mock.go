// Code generated by MockGen. DO NOT EDIT.
// Source: internal/content/infra/api/handler/interface.go
//
// Generated by this command:
//
//	mockgen -source=internal/content/infra/api/handler/interface.go -destination=internal/content/infra/api/handler/interface_mock.go -package=handler
//

// Package handler is a generated GoMock package.
package handler

import (
	http "net/http"
	reflect "reflect"

	gomock "go.uber.org/mock/gomock"
)

// MockAdapter is a mock of Adapter interface.
type MockAdapter struct {
	ctrl     *gomock.Controller
	recorder *MockAdapterMockRecorder
	isgomock struct{}
}

// MockAdapterMockRecorder is the mock recorder for MockAdapter.
type MockAdapterMockRecorder struct {
	mock *MockAdapter
}

// NewMockAdapter creates a new mock instance.
func NewMockAdapter(ctrl *gomock.Controller) *MockAdapter {
	mock := &MockAdapter{ctrl: ctrl}
	mock.recorder = &MockAdapterMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockAdapter) EXPECT() *MockAdapterMockRecorder {
	return m.recorder
}

// GetRoutes mocks base method.
func (m *MockAdapter) GetRoutes() map[string]func(http.ResponseWriter, *http.Request) error {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "GetRoutes")
	ret0, _ := ret[0].(map[string]func(http.ResponseWriter, *http.Request) error)
	return ret0
}

// GetRoutes indicates an expected call of GetRoutes.
func (mr *MockAdapterMockRecorder) GetRoutes() *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "GetRoutes", reflect.TypeOf((*MockAdapter)(nil).GetRoutes))
}
